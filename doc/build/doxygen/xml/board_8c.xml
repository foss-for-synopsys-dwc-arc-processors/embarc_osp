<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="board_8c" kind="file" language="C++">
    <compoundname>board.c</compoundname>
    <includes refid="embARC_8h" local="yes">embARC.h</includes>
    <includes refid="embARC__debug_8h" local="yes">embARC_debug.h</includes>
    <incdepgraph>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="15">
        <label>console_io.h</label>
      </node>
      <node id="12">
        <label>arc/arc_timer.h</label>
        <link refid="arc__timer_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>arc/arc.h</label>
        <link refid="arc_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/embarc_osp/embarc_osp/board/board.c</label>
        <link refid="board_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>board.h</label>
        <link refid="board_8h"/>
      </node>
      <node id="2">
        <label>embARC.h</label>
        <link refid="embARC_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>arc/arc_builtin.h</label>
        <link refid="arc__builtin_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>embARC_error.h</label>
        <link refid="embARC__error_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>arc/arc_feature_config.h</label>
        <link refid="arc__feature__config_8h"/>
      </node>
      <node id="3">
        <label>embARC_toolchain.h</label>
        <link refid="embARC__toolchain_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>arc/arc_exception.h</label>
        <link refid="arc__exception_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>xprintf.h</label>
      </node>
      <node id="17">
        <label>embARC_debug.h</label>
        <link refid="embARC__debug_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structmain__args" prot="public">main_args</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="board_8c_a81683abd2be8211a2d11b4e054a31662_1a81683abd2be8211a2d11b4e054a31662" prot="public" static="no">
        <name>MAX_SYS_COUNTER_VALUE</name>
        <initializer>(0xffffffff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="33" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="board_8c_a8c5105538fa26a5c3d6eff92454a8697_1a8c5105538fa26a5c3d6eff92454a8697" prot="public" static="no">
        <name>BOARD_SYS_TIMER_HZ</name>
        <initializer>(1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="36" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="board_8c_a201c53679367adfe3e7caa2acea3851c_1a201c53679367adfe3e7caa2acea3851c" prot="public" static="no">
        <name>HZ_COUNT_CONV</name>
        <param><defname>precision</defname></param>
        <param><defname>base</defname></param>
        <initializer>((precision) / (base))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="55" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="board_8c_a5af7f00b0c71532f9cceac9cb62d8490_1a5af7f00b0c71532f9cceac9cb62d8490" prot="public" static="no">
        <type>struct <ref refid="structmain__args" kindref="compound">main_args</ref></type>
        <definition>typedef struct main_args MAIN_ARGS</definition>
        <argsstring></argsstring>
        <name>MAIN_ARGS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="42" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="board_8c_ae47081a077cba3104ac7f6dff4459ffa_1ae47081a077cba3104ac7f6dff4459ffa" prot="public" static="no" mutable="no">
        <type><ref refid="board_8c_a5af7f00b0c71532f9cceac9cb62d8490_1a5af7f00b0c71532f9cceac9cb62d8490" kindref="member">MAIN_ARGS</ref></type>
        <definition>MAIN_ARGS s_main_args</definition>
        <argsstring></argsstring>
        <name>s_main_args</name>
        <initializer>= { 1, { &quot;main&quot; } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change this to pass your own arguments to main functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="45" column="11" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="board_8c_a3985c9c07cb4b53afed42d9db350ab20_1a3985c9c07cb4b53afed42d9db350ab20" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t cyc_hz_count</definition>
        <argsstring></argsstring>
        <name>cyc_hz_count</name>
        <initializer>= (<ref refid="nsim_8h_a5ce41facbc716678c95ac51a44e7a052_1a5ce41facbc716678c95ac51a44e7a052" kindref="member">BOARD_CPU_CLOCK</ref> /  (1000) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>board timer interrupt reset count </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="48" column="17" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="board_8c_ad7997233196cefb8c3a808a047eabd35_1ad7997233196cefb8c3a808a047eabd35" prot="public" static="yes" mutable="no">
        <type>uint64_t</type>
        <definition>volatile uint64_t gl_sys_hz_cnt</definition>
        <argsstring></argsstring>
        <name>gl_sys_hz_cnt</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>board timer counter in timer interrupt </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="51" column="26" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="board_8c_ae5af267603808c2a81386dafb4041ae1_1ae5af267603808c2a81386dafb4041ae1" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>volatile uint32_t gl_ms_cnt</definition>
        <argsstring></argsstring>
        <name>gl_ms_cnt</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>board 1ms counter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="53" column="26" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="board_8c_aca01284e25fc05aa4271ee42151a7f48_1aca01284e25fc05aa4271ee42151a7f48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void board_timer_isr</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>board_timer_isr</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Board bare-metal timer interrupt. Interrupt frequency is based on the defined <ref refid="nsim_8h_a8c5105538fa26a5c3d6eff92454a8697_1a8c5105538fa26a5c3d6eff92454a8697" kindref="member">BOARD_SYS_TIMER_HZ</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="61" column="13" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="board_8c_a4318b0eca9f4a73251bbe4450e816d67_1a4318b0eca9f4a73251bbe4450e816d67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void board_timer_init</definition>
        <argsstring>(void)</argsstring>
        <name>board_timer_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialise bare-metal board timer and interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called in <ref refid="group__BOARD__COMMON_ga916f2adc2080b4fe88034086d107a8dc_1ga916f2adc2080b4fe88034086d107a8dc" kindref="member">board_init</ref>, and it initializes the 1-MS timer interrupt for bare-metal mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="74" column="13" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__BOARD__COMMON_ga93e410eda85f9b5da900bcf582ff0043_1ga93e410eda85f9b5da900bcf582ff0043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_gaf43b2495a8cfb48bdd04d202402a0b88_1gaf43b2495a8cfb48bdd04d202402a0b88" kindref="member">EMBARC_WEAK</ref> void</type>
        <definition>EMBARC_WEAK void platform_main</definition>
        <argsstring>(void)</argsstring>
        <name>platform_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="298" column="18" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="298" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="group__BOARD__COMMON_gaebe394b3306ee36bba1a23f2ea9e6d2d_1gaebe394b3306ee36bba1a23f2ea9e6d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_gaf43b2495a8cfb48bdd04d202402a0b88_1gaf43b2495a8cfb48bdd04d202402a0b88" kindref="member">EMBARC_WEAK</ref> void</type>
        <definition>EMBARC_WEAK void board_main</definition>
        <argsstring>(void)</argsstring>
        <name>board_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="315" column="18" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="315" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="group__BOARD__COMMON_ga2d400eb191882aeb5b35143ffe7ea9ef_1ga2d400eb191882aeb5b35143ffe7ea9ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void board_timer_update</definition>
        <argsstring>(uint32_t precision)</argsstring>
        <name>board_timer_update</name>
        <param>
          <type>uint32_t</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
<para>Update timer counter and other MS period operation in cycling interrupt and must be called periodically. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt-period precision in Hz </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>count sys hz</para>
<para>count ms</para>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="344" column="6" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="344" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="group__BOARD__COMMON_gac019f96ffa35670f7013ab1e3c91b230_1gac019f96ffa35670f7013ab1e3c91b230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t board_get_hwticks</definition>
        <argsstring>(void)</argsstring>
        <name>board_get_hwticks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current timer&apos;s counter value in ticks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>count in 64 bit format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="371" column="10" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="371" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="group__BOARD__COMMON_gac804f2adaefaef9ae3d123dbe4abb123_1gac804f2adaefaef9ae3d123dbe4abb123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t board_get_cur_us</definition>
        <argsstring>(void)</argsstring>
        <name>board_get_cur_us</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current passed us since timer init. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>us</parametername>
</parameternamelist>
<parameterdescription>
<para>Count in 64 bit format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="388" column="10" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="388" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="group__BOARD__COMMON_ga0a2cbc20d3612af27543fde270ad862c_1ga0a2cbc20d3612af27543fde270ad862c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t board_get_cur_ms</definition>
        <argsstring>(void)</argsstring>
        <name>board_get_cur_ms</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current passed ms since timer init. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Count in 32 bit format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="405" column="10" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group__BOARD__COMMON_gad78111cf910063b70a901aa3fbcf7c86_1gad78111cf910063b70a901aa3fbcf7c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t board_get_cur_syshz</definition>
        <argsstring>(void)</argsstring>
        <name>board_get_cur_syshz</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get board timer counter in timer interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Count</parametername>
</parameternamelist>
<parameterdescription>
<para>in 64 bit format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="414" column="10" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="414" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="group__BOARD__COMMON_gadf80b95e6ceb5c1014e3e1a6f243fe8e_1gadf80b95e6ceb5c1014e3e1a6f243fe8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void board_delay_ms</definition>
        <argsstring>(uint32_t ms, uint8_t os_compat)</argsstring>
        <name>board_delay_ms</name>
        <param>
          <type>uint32_t</type>
          <declname>ms</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>os_compat</declname>
        </param>
        <briefdescription>
<para>provide MS delay function </para>
        </briefdescription>
        <detaileddescription>
<para>this function needs a 1-MS timer interrupt to work. For bare-metal, it is implemented in this file. For OS, you must call <ref refid="group__BOARD__COMMON_ga2d400eb191882aeb5b35143ffe7ea9ef_1ga2d400eb191882aeb5b35143ffe7ea9ef" kindref="member">board_timer_update</ref> in the OS 1-MS timer interrupt when the bare-metal timer interrupt is not ready <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ms</parametername>
</parameternamelist>
<parameterdescription>
<para>MS to delay </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">os_compat</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable or disable When this delay is enabled, use the OS delay function, if one is provided. See <ref refid="group__BOARD__COMMON_ga0925d758144e37de4158bb2faadea9e9_1ga0925d758144e37de4158bb2faadea9e9" kindref="member">OSP_DELAY_OS_COMPAT_ENABLE</ref> and <ref refid="group__BOARD__COMMON_ga0a78908e297806f4ae43488e59f3e682_1ga0a78908e297806f4ae43488e59f3e682" kindref="member">OSP_DELAY_OS_COMPAT_DISABLE</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c" line="433" column="6" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/board.c" bodystart="433" bodyend="451"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Synopsys,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Synopsys,<sp/>Inc.,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>---------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embARC_8h" kindref="compound">embARC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embARC__debug_8h" kindref="compound">embARC_debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SYS_COUNTER_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xffffffff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOARD_SYS_TIMER_HZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOARD_SYS_TIMER_HZ<sp/><sp/><sp/><sp/><sp/><sp/>(1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structmain__args" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmain__args" kindref="compound">main_args</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmain__args_1aef78a9fcf04127014bd8f0caaec0e4a1" kindref="member">argc</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structmain__args_1a42e1cf65ca6f98bf7a7c70f1bb80be62" kindref="member">argv</ref>[];</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><ref refid="board_8c_a5af7f00b0c71532f9cceac9cb62d8490_1a5af7f00b0c71532f9cceac9cb62d8490" kindref="member">MAIN_ARGS</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="structmain__args" kindref="compound">MAIN_ARGS</ref><sp/><ref refid="board_8c_ae47081a077cba3104ac7f6dff4459ffa_1ae47081a077cba3104ac7f6dff4459ffa" kindref="member">s_main_args</ref><sp/>=<sp/>{<sp/>1,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal"><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="board_8c_a3985c9c07cb4b53afed42d9db350ab20_1a3985c9c07cb4b53afed42d9db350ab20" kindref="member">cyc_hz_count</ref><sp/>=<sp/>(<ref refid="axs_8h_a5ce41facbc716678c95ac51a44e7a052_1a5ce41facbc716678c95ac51a44e7a052" kindref="member">BOARD_CPU_CLOCK</ref><sp/>/<sp/><ref refid="board_8c_a8c5105538fa26a5c3d6eff92454a8697_1a8c5105538fa26a5c3d6eff92454a8697" kindref="member">BOARD_SYS_TIMER_HZ</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="board_8c_ad7997233196cefb8c3a808a047eabd35_1ad7997233196cefb8c3a808a047eabd35" kindref="member">gl_sys_hz_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="board_8c_ae5af267603808c2a81386dafb4041ae1_1ae5af267603808c2a81386dafb4041ae1" kindref="member">gl_ms_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HZ_COUNT_CONV(precision,<sp/>base)<sp/><sp/>((precision)<sp/>/<sp/>(base))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="board_8c_aca01284e25fc05aa4271ee42151a7f48_1aca01284e25fc05aa4271ee42151a7f48" kindref="member">board_timer_isr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__MISC__TIMER_gaa491d0f301accab4ef12ef453b848777_1gaa491d0f301accab4ef12ef453b848777" kindref="member">arc_timer_int_clear</ref>(<ref refid="axs_8h_a375f6343d75692da616b44c4958e599f_1a375f6343d75692da616b44c4958e599f" kindref="member">BOARD_SYS_TIMER_ID</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BOARD__COMMON_ga2d400eb191882aeb5b35143ffe7ea9ef_1ga2d400eb191882aeb5b35143ffe7ea9ef" kindref="member">board_timer_update</ref>(<ref refid="board_8c_a8c5105538fa26a5c3d6eff92454a8697_1a8c5105538fa26a5c3d6eff92454a8697" kindref="member">BOARD_SYS_TIMER_HZ</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="board_8c_a4318b0eca9f4a73251bbe4450e816d67_1a4318b0eca9f4a73251bbe4450e816d67" kindref="member">board_timer_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__ARC__HAL__MISC__TIMER_ga932c45dfc9a9503c778ef586fccade99_1ga932c45dfc9a9503c778ef586fccade99" kindref="member">arc_timer_present</ref>(<ref refid="axs_8h_a375f6343d75692da616b44c4958e599f_1a375f6343d75692da616b44c4958e599f" kindref="member">BOARD_SYS_TIMER_ID</ref>))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secureshield__int_8c_a37e62d9267259517ad41219d301d0fdf_1a37e62d9267259517ad41219d301d0fdf" kindref="member">int_disable</ref>(<ref refid="axs_8h_a75c72f500916ce679ad4458d61fd3a3e_1a75c72f500916ce679ad4458d61fd3a3e" kindref="member">BOARD_SYS_TIMER_INTNO</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>first<sp/>then<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__EXCEPTION__INTERRUPT_ga75a43aab696debc012bc72b6de13e30a_1ga75a43aab696debc012bc72b6de13e30a" kindref="member">int_handler_install</ref>(<ref refid="axs_8h_a75c72f500916ce679ad4458d61fd3a3e_1a75c72f500916ce679ad4458d61fd3a3e" kindref="member">BOARD_SYS_TIMER_INTNO</ref>,<sp/><ref refid="board_8c_aca01284e25fc05aa4271ee42151a7f48_1aca01284e25fc05aa4271ee42151a7f48" kindref="member">board_timer_isr</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__MISC__TIMER_ga4ca591bc3b7a83e307437f9b16d387c0_1ga4ca591bc3b7a83e307437f9b16d387c0" kindref="member">arc_timer_start</ref>(<ref refid="axs_8h_a375f6343d75692da616b44c4958e599f_1a375f6343d75692da616b44c4958e599f" kindref="member">BOARD_SYS_TIMER_ID</ref>,<sp/><ref refid="group__ARC__HAL__MISC__TIMER_ga3d86ac7ea9125720c6117abaae649e1a_1ga3d86ac7ea9125720c6117abaae649e1a" kindref="member">TIMER_CTRL_IE</ref><sp/>|<sp/><ref refid="group__ARC__HAL__MISC__TIMER_ga454b737cdb6a609764ef011654f471f2_1ga454b737cdb6a609764ef011654f471f2" kindref="member">TIMER_CTRL_NH</ref>,<sp/><ref refid="board_8c_a3985c9c07cb4b53afed42d9db350ab20_1a3985c9c07cb4b53afed42d9db350ab20" kindref="member">cyc_hz_count</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>1ms<sp/>timer<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="secureshield__int_8c_aa52183d2aea08446fb0a7ce1ef760696_1aa52183d2aea08446fb0a7ce1ef760696" kindref="member">int_enable</ref>(<ref refid="axs_8h_a75c72f500916ce679ad4458d61fd3a3e_1a75c72f500916ce679ad4458d61fd3a3e" kindref="member">BOARD_SYS_TIMER_INTNO</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__MISC__TIMER_ga6238e55ff583a56101118cedf32edb40_1ga6238e55ff583a56101118cedf32edb40" kindref="member">arc_timer_calibrate_delay</ref>(<ref refid="axs_8h_a5ce41facbc716678c95ac51a44e7a052_1a5ce41facbc716678c95ac51a44e7a052" kindref="member">BOARD_CPU_CLOCK</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MID_FATFS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FATFS<sp/>sd_card_fs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>system<sp/>object<sp/>for<sp/>each<sp/>logical<sp/>drive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MID_FATFS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(EMBARC_USE_BOARD_MAIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*---<sp/>When<sp/>new<sp/>embARC<sp/>Startup<sp/>process<sp/>is<sp/>used----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OS_FREERTOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_CALC(x,<sp/>y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>&lt;<sp/>(y))?(x):(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_CALC(x,<sp/>y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>&gt;<sp/>(y))?(x):(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note:<sp/>Task<sp/>size<sp/>in<sp/>unit<sp/>of<sp/>StackType_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note:<sp/>Stack<sp/>size<sp/>should<sp/>be<sp/>small<sp/>than<sp/>65536,<sp/>since<sp/>the<sp/>stack<sp/>size<sp/>unit<sp/>is<sp/>uint16_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_STACKSZ(size)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MIN_CALC(size,<sp/>configTOTAL_HEAP_SIZE)<sp/>/<sp/>sizeof(StackType_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_LWIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lwip_wifi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TASK_WIFI_PERIOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TASK_WIFI_PERIOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50<sp/></highlight><highlight class="comment">/*<sp/>WiFi<sp/>connection<sp/>task<sp/>polling<sp/>period,<sp/>unit:<sp/>kernel<sp/>ticks<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TASK_STACK_SIZE_WIFI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WiFi<sp/>task<sp/>stack<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TASK_STACK_SIZE_WIFI<sp/><sp/><sp/><sp/>MIN_STACKSZ(1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TASK_PRI_WIFI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TASK_PRI_WIFI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(configMAX_PRIORITIES<sp/>-<sp/>1)<sp/></highlight><highlight class="comment">/*<sp/>WiFi<sp/>task<sp/>priority<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdev__wnic" kindref="compound">DEV_WNIC</ref><sp/>*wifi_wnic;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TaskHandle_t<sp/>task_handle_wifi;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MID_LWIP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_NTSHELL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TASK_STACK_SIZE_NTSHELL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TASK_STACK_SIZE_NTSHELL<sp/>MIN_STACKSZ(4096)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TASK_PRI_NTSHELL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TASK_PRI_NTSHELL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NTSHELL<sp/>task<sp/>priority<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TaskHandle_t<sp/>task_handle_ntshell;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>middleware<sp/>ntshell,will<sp/>activate<sp/>main<sp/>task<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TASK_STACK_SIZE_MAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TASK_STACK_SIZE_MAIN<sp/><sp/><sp/><sp/>MIN_STACKSZ(4096)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TASK_PRI_MAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TASK_PRI_MAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Main<sp/>task<sp/>priority<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TaskHandle_t<sp/>task_handle_main;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MID_NTSHELL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_LWIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>task_wifi(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*par)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwnic__auth__key" kindref="compound">WNIC_AUTH_KEY</ref><sp/>auth_key;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SLIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>wifi_wnic<sp/>=<sp/><ref refid="group__DEVICE__HAL__WNIC_ga4ea6fc486b6808c2c88e8116dde30a05_1ga4ea6fc486b6808c2c88e8116dde30a05" kindref="member">wnic_get_dev</ref>(<ref refid="group__BOARD__EMSK__COMMON__INIT_gad6947c3572bfd9a177242f55180fac7d_1gad6947c3572bfd9a177242f55180fac7d" kindref="member">BOARD_SLIPWIFI_0_ID</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>wifi_wnic<sp/>=<sp/><ref refid="group__DEVICE__HAL__WNIC_ga4ea6fc486b6808c2c88e8116dde30a05_1ga4ea6fc486b6808c2c88e8116dde30a05" kindref="member">wnic_get_dev</ref>(<ref refid="emsdp_8h_a5f610d765d2b1871d8776a6a393d2e87_1a5f610d765d2b1871d8776a6a393d2e87" kindref="member">BOARD_PMWIFI_0_ID</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WF_HOTSPOT_IS_OPEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>auth_key.<ref refid="structwnic__auth__key_1aec90d3f0a43021a449a37446e53cd7ab" kindref="member">key</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>auth_key.<ref refid="structwnic__auth__key_1ae5b5c4b32f32eca9118c42dc3322c2a5" kindref="member">key_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>auth_key.<ref refid="structwnic__auth__key_1af262674bb1618d4c9ebc52a8f7412a46" kindref="member">key_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>auth_key.<ref refid="structwnic__auth__key_1aec90d3f0a43021a449a37446e53cd7ab" kindref="member">key</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)<ref refid="emsdp_8h_a8ee6af55664839a23a804c21267cac97_1a8ee6af55664839a23a804c21267cac97" kindref="member">WF_HOTSPOT_PASSWD</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>auth_key.<ref refid="structwnic__auth__key_1ae5b5c4b32f32eca9118c42dc3322c2a5" kindref="member">key_len</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="emsdp_8h_a8ee6af55664839a23a804c21267cac97_1a8ee6af55664839a23a804c21267cac97" kindref="member">WF_HOTSPOT_PASSWD</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>auth_key.<ref refid="structwnic__auth__key_1af262674bb1618d4c9ebc52a8f7412a46" kindref="member">key_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>lwip_wifi_init();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;\r\nNow<sp/>trying<sp/>to<sp/>connect<sp/>to<sp/>WIFI<sp/>hotspot,<sp/>please<sp/>wait<sp/>about<sp/>30s!\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wifi_wnic-&gt;<ref refid="structdev__wnic_a466e11b59e1de127404470cf4cd84ac2_1a466e11b59e1de127404470cf4cd84ac2" kindref="member">period_process</ref>(par);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WF_HOTSPOT_IS_OPEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wifi_wnic-&gt;<ref refid="structdev__wnic_ab8ec6209a59a3382897cf479838a24bb_1ab8ec6209a59a3382897cf479838a24bb" kindref="member">wnic_connect</ref>(<ref refid="group__DEVICE__HAL__WNIC__MACROS_gab11336a15c7c926d133e400b5e2bdafa_1ggab11336a15c7c926d133e400b5e2bdafaa0fde1f9c1652c21023771c15d0dd4842" kindref="member">AUTH_SECURITY_OPEN</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)<ref refid="emsdp_8h_a5a633e260ba8bc86461e7665662911a3_1a5a633e260ba8bc86461e7665662911a3" kindref="member">WF_HOTSPOT_NAME</ref>,<sp/>&amp;auth_key);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wifi_wnic-&gt;<ref refid="structdev__wnic_ab8ec6209a59a3382897cf479838a24bb_1ab8ec6209a59a3382897cf479838a24bb" kindref="member">wnic_connect</ref>(<ref refid="group__DEVICE__HAL__WNIC__MACROS_gab11336a15c7c926d133e400b5e2bdafa_1ggab11336a15c7c926d133e400b5e2bdafaa0882bf43abaf50f08c2a526a41035854" kindref="member">AUTH_SECURITY_WPA_AUTO_WITH_PASS_PHRASE</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)<ref refid="emsdp_8h_a5a633e260ba8bc86461e7665662911a3_1a5a633e260ba8bc86461e7665662911a3" kindref="member">WF_HOTSPOT_NAME</ref>,<sp/>&amp;auth_key);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flag<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>lwip_wifi_isup())<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;WiFi<sp/>connected<sp/>\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MID_NTSHELL<sp/></highlight><highlight class="comment">/*<sp/>resume<sp/>main<sp/>task<sp/>when<sp/>ntshell<sp/>task<sp/>is<sp/>not<sp/>defined<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_handle_main)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskResume(task_handle_main);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;Please<sp/>run<sp/>NT-Shell<sp/>command(main)<sp/>to<sp/>start<sp/>your<sp/>application.\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;main<sp/>command<sp/>may<sp/>required<sp/>some<sp/>arguments,<sp/>please<sp/>refer<sp/>to<sp/>example&apos;s<sp/>document.\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>consider<sp/>to<sp/>generate<sp/>a<sp/>event<sp/>to<sp/>notify<sp/>network<sp/>is<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(TASK_WIFI_PERIOD);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MID_LWIP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>task_main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*par)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MID_LWIP)<sp/>&amp;&amp;<sp/>!defined(MID_NTSHELL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;Enter<sp/>to<sp/>main<sp/>function....\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;Wait<sp/>until<sp/>WiFi<sp/>connected...\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskSuspend(NULL);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((par<sp/>==<sp/>NULL)<sp/>||<sp/>(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)par)<sp/>&amp;<sp/>0x3))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>null<sp/>or<sp/>aligned<sp/>not<sp/>to<sp/>4<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/><ref refid="group__ARC__HAL__BUILTIN_ga3a4f9f65558ad1c1182054eb6efa054f_1ga3a4f9f65558ad1c1182054eb6efa054f" kindref="member">arc_goto_main</ref>(0,<sp/>NULL);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmain__args" kindref="compound">MAIN_ARGS</ref><sp/>*main_arg<sp/>=<sp/>(<ref refid="structmain__args" kindref="compound">MAIN_ARGS</ref><sp/>*)par;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/><ref refid="group__ARC__HAL__BUILTIN_ga3a4f9f65558ad1c1182054eb6efa054f_1ga3a4f9f65558ad1c1182054eb6efa054f" kindref="member">arc_goto_main</ref>(main_arg-&gt;<ref refid="structmain__args_1aef78a9fcf04127014bd8f0caaec0e4a1" kindref="member">argc</ref>,<sp/>main_arg-&gt;<ref refid="structmain__args_1a42e1cf65ca6f98bf7a7c70f1bb80be62" kindref="member">argv</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;Exit<sp/>from<sp/>main<sp/>function,<sp/>error<sp/>code:%d....\r\n&quot;</highlight><highlight class="normal">,<sp/>ercd);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskSuspend(NULL);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>OS_FREERTOS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><ref refid="group__TOOLCHAIN_gaf43b2495a8cfb48bdd04d202402a0b88_1gaf43b2495a8cfb48bdd04d202402a0b88" kindref="member">EMBARC_WEAK</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BOARD__COMMON_ga93e410eda85f9b5da900bcf582ff0043_1ga93e410eda85f9b5da900bcf582ff0043" kindref="member">platform_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_COMMON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>xprintf_setup();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>platform_print_banner();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_FATFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f_mount(&amp;sd_card_fs,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0)<sp/>!=<sp/>FR_OK)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;FatFS<sp/>failed<sp/>to<sp/>initialize!\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;FatFS<sp/>initialized<sp/>successfully!\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_OS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__OS__HAL__INC_ga3b32ebc1e3ed73a5e8a20a27176e0e94_1ga3b32ebc1e3ed73a5e8a20a27176e0e94" kindref="member">os_hal_exc_init</ref>();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_NTSHELL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>NTSHELL_IO<sp/>*nt_io;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>nt_io<sp/>=<sp/>get_ntshell_io(<ref refid="axs_8h_a10e936569e85faad73173595811cacd1_1a10e936569e85faad73173595811cacd1" kindref="member">BOARD_ONBOARD_NTSHELL_ID</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OS_FREERTOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_NTSHELL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreate((TaskFunction_t)ntshell_task,<sp/></highlight><highlight class="stringliteral">&quot;ntshell-console&quot;</highlight><highlight class="normal">,<sp/>TASK_STACK_SIZE_NTSHELL,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)nt_io,<sp/>TASK_PRI_NTSHELL,<sp/>&amp;task_handle_ntshell);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreate((TaskFunction_t)task_main,<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">,<sp/>TASK_STACK_SIZE_MAIN,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;<ref refid="board_8c_ae47081a077cba3104ac7f6dff4459ffa_1ae47081a077cba3104ac7f6dff4459ffa" kindref="member">s_main_args</ref>),<sp/>TASK_PRI_MAIN,<sp/>&amp;task_handle_main);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_LWIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreate((TaskFunction_t)task_wifi,<sp/></highlight><highlight class="stringliteral">&quot;wifi-conn&quot;</highlight><highlight class="normal">,<sp/>TASK_STACK_SIZE_WIFI,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)1,<sp/>TASK_PRI_WIFI,<sp/>&amp;task_handle_wifi);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vTaskStartScheduler()<sp/>Will<sp/>not<sp/>return<sp/>unless<sp/>a<sp/>task<sp/>calls<sp/>vTaskEndScheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskStartScheduler();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>OS_FREERTOS<sp/>not<sp/>defined<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="secureshield__int_8c_a2ff87b6378c31366ebcb6459f26434ba_1a2ff87b6378c31366ebcb6459f26434ba" kindref="member">cpu_unlock</ref>();<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlock<sp/>cpu<sp/>to<sp/>let<sp/>interrupt<sp/>work<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_NTSHELL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ntshell_task((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)nt_io);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>task_main((void<sp/>*)(&amp;s_main_args));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__BUILTIN_ga3a4f9f65558ad1c1182054eb6efa054f_1ga3a4f9f65558ad1c1182054eb6efa054f" kindref="member">arc_goto_main</ref>(0,<sp/>NULL);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>OS_FREERTOS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><ref refid="group__TOOLCHAIN_gaf43b2495a8cfb48bdd04d202402a0b88_1gaf43b2495a8cfb48bdd04d202402a0b88" kindref="member">EMBARC_WEAK</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BOARD__COMMON_gaebe394b3306ee36bba1a23f2ea9e6d2d_1gaebe394b3306ee36bba1a23f2ea9e6d2d" kindref="member">board_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Metaware<sp/>toolchain<sp/>C++<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__TOOLCHAIN_ga8d7228c7796bc6bfde616035b9339f64_1ga8d7228c7796bc6bfde616035b9339f64" kindref="member">arc_mwdt_init</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNU__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ARC<sp/>GNU<sp/>toolchain<sp/>C++<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>arc_gnu_do_global_ctors_aux();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>arc_gnu_do_init_array_aux();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>core<sp/>level<sp/>interrupt<sp/>&amp;<sp/>exception<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arc__exception_8h_a0d83599ed3aa340e40e593d5556e811f_1a0d83599ed3aa340e40e593d5556e811f" kindref="member">exc_int_init</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arc__cache_8h_a6bda12adc92ba421f24f6e836051db9c_1a6bda12adc92ba421f24f6e836051db9c" kindref="member">arc_cache_init</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>necessary<sp/>board<sp/>level<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BOARD__COMMON_ga916f2adc2080b4fe88034086d107a8dc_1ga916f2adc2080b4fe88034086d107a8dc" kindref="member">board_init</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>bare-metal<sp/>board<sp/>timer<sp/>and<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="board_8c_a4318b0eca9f4a73251bbe4450e816d67_1a4318b0eca9f4a73251bbe4450e816d67" kindref="member">board_timer_init</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>platform<sp/>(e.g<sp/>RTOS,<sp/>baremetal)level<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BOARD__COMMON_ga93e410eda85f9b5da900bcf582ff0043_1ga93e410eda85f9b5da900bcf582ff0043" kindref="member">platform_main</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>board<sp/>level<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__TOOLCHAIN_ga56c1383e769d9ff07c667a4c04ee50a9_1ga56c1383e769d9ff07c667a4c04ee50a9" kindref="member">arc_mwdt_fini</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNU__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>arc_gnu_do_global_dtors_aux();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*--<sp/>Old<sp/>embARC<sp/>Startup<sp/>process<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="group__TOOLCHAIN_gaf43b2495a8cfb48bdd04d202402a0b88_1gaf43b2495a8cfb48bdd04d202402a0b88" kindref="member">EMBARC_WEAK</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BOARD__COMMON_ga93e410eda85f9b5da900bcf582ff0043_1ga93e410eda85f9b5da900bcf582ff0043" kindref="member">platform_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_COMMON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>xprintf_setup();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>platform_print_banner();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MID_FATFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f_mount(&amp;sd_card_fs,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0)<sp/>!=<sp/>FR_OK)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;FatFS<sp/>failed<sp/>to<sp/>initialize!\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__debug_8h_afcf8ad3ba3aaf1a0f704cf8de50ffa60_1afcf8ad3ba3aaf1a0f704cf8de50ffa60" kindref="member">EMBARC_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;FatFS<sp/>initialized<sp/>successfully!\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cpu_unlock();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__BUILTIN_ga3a4f9f65558ad1c1182054eb6efa054f_1ga3a4f9f65558ad1c1182054eb6efa054f" kindref="member">arc_goto_main</ref>(0,<sp/>NULL);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><ref refid="group__TOOLCHAIN_gaf43b2495a8cfb48bdd04d202402a0b88_1gaf43b2495a8cfb48bdd04d202402a0b88" kindref="member">EMBARC_WEAK</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BOARD__COMMON_gaebe394b3306ee36bba1a23f2ea9e6d2d_1gaebe394b3306ee36bba1a23f2ea9e6d2d" kindref="member">board_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Metaware<sp/>toolchain<sp/>C++<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__TOOLCHAIN_ga8d7228c7796bc6bfde616035b9339f64_1ga8d7228c7796bc6bfde616035b9339f64" kindref="member">arc_mwdt_init</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNU__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ARC<sp/>GNU<sp/>toolchain<sp/>C++<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>arc_gnu_do_global_ctors_aux();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>arc_gnu_do_init_array_aux();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>core<sp/>level<sp/>interrupt<sp/>&amp;<sp/>exception<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arc__exception_8h_a0d83599ed3aa340e40e593d5556e811f_1a0d83599ed3aa340e40e593d5556e811f" kindref="member">exc_int_init</ref>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="arc__cache_8h_a6bda12adc92ba421f24f6e836051db9c_1a6bda12adc92ba421f24f6e836051db9c" kindref="member">arc_cache_init</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BOARD__COMMON_ga93e410eda85f9b5da900bcf582ff0043_1ga93e410eda85f9b5da900bcf582ff0043" kindref="member">platform_main</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__TOOLCHAIN_ga56c1383e769d9ff07c667a4c04ee50a9_1ga56c1383e769d9ff07c667a4c04ee50a9" kindref="member">arc_mwdt_fini</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNU__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>arc_gnu_do_global_dtors_aux();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>EMBARC_USE_BOARD_MAIN<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BOARD__COMMON_ga2d400eb191882aeb5b35143ffe7ea9ef_1ga2d400eb191882aeb5b35143ffe7ea9ef" kindref="member">board_timer_update</ref>(uint32_t<sp/>precision)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>sys_hz_update<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>sys_ms_update<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>hz_conv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>hz_conv<sp/>=<sp/><ref refid="board_8c_a201c53679367adfe3e7caa2acea3851c_1a201c53679367adfe3e7caa2acea3851c" kindref="member">HZ_COUNT_CONV</ref>(precision,<sp/><ref refid="board_8c_a8c5105538fa26a5c3d6eff92454a8697_1a8c5105538fa26a5c3d6eff92454a8697" kindref="member">BOARD_SYS_TIMER_HZ</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>sys_hz_update++;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sys_hz_update<sp/>&gt;=<sp/>hz_conv)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_hz_update<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="board_8c_ad7997233196cefb8c3a808a047eabd35_1ad7997233196cefb8c3a808a047eabd35" kindref="member">gl_sys_hz_cnt</ref>++;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>hz_conv<sp/>=<sp/><ref refid="board_8c_a201c53679367adfe3e7caa2acea3851c_1a201c53679367adfe3e7caa2acea3851c" kindref="member">HZ_COUNT_CONV</ref>(precision,<sp/><ref refid="axs_8h_a4deac94773cab055391479766cd72cc6_1a4deac94773cab055391479766cd72cc6" kindref="member">BOARD_SYS_TIMER_MS_HZ</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>sys_ms_update++;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sys_ms_update<sp/>&gt;=<sp/>hz_conv)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_ms_update<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="board_8c_ae5af267603808c2a81386dafb4041ae1_1ae5af267603808c2a81386dafb4041ae1" kindref="member">gl_ms_cnt</ref>++;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">uint64_t<sp/><ref refid="group__BOARD__COMMON_gac019f96ffa35670f7013ab1e3c91b230_1gac019f96ffa35670f7013ab1e3c91b230" kindref="member">board_get_hwticks</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_ticks;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>total_ticks;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__MISC__TIMER_ga651d9dfeffc650c2575542eb21b4cefb_1ga651d9dfeffc650c2575542eb21b4cefb" kindref="member">arc_timer_current</ref>(<ref refid="group__ARC__HAL__MISC__TIMER_gacc9ff9df4a9674a1ce9ba08fc4a4679e_1gacc9ff9df4a9674a1ce9ba08fc4a4679e" kindref="member">TIMER_0</ref>,<sp/>&amp;sub_ticks);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>total_ticks<sp/>=<sp/>(uint64_t)<ref refid="group__BOARD__COMMON_ga1aeaa7e8387adcad735b59293caa0078_1ga1aeaa7e8387adcad735b59293caa0078" kindref="member">OSP_GET_CUR_MS</ref>()<sp/>*<sp/>(<ref refid="axs_8h_a5ce41facbc716678c95ac51a44e7a052_1a5ce41facbc716678c95ac51a44e7a052" kindref="member">BOARD_CPU_CLOCK</ref><sp/>/<sp/><ref refid="board_8c_a8c5105538fa26a5c3d6eff92454a8697_1a8c5105538fa26a5c3d6eff92454a8697" kindref="member">BOARD_SYS_TIMER_HZ</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>total_ticks<sp/>+=<sp/>(uint64_t)sub_ticks;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_ticks;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">uint64_t<sp/><ref refid="group__BOARD__COMMON_gac804f2adaefaef9ae3d123dbe4abb123_1gac804f2adaefaef9ae3d123dbe4abb123" kindref="member">board_get_cur_us</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_us;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>total_us;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__MISC__TIMER_ga651d9dfeffc650c2575542eb21b4cefb_1ga651d9dfeffc650c2575542eb21b4cefb" kindref="member">arc_timer_current</ref>(<ref refid="group__ARC__HAL__MISC__TIMER_gacc9ff9df4a9674a1ce9ba08fc4a4679e_1gacc9ff9df4a9674a1ce9ba08fc4a4679e" kindref="member">TIMER_0</ref>,<sp/>&amp;sub_us);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>sub_us<sp/>=<sp/>((uint64_t)sub_us<sp/>*<sp/>1000000)<sp/>/<sp/><ref refid="axs_8h_a5ce41facbc716678c95ac51a44e7a052_1a5ce41facbc716678c95ac51a44e7a052" kindref="member">BOARD_CPU_CLOCK</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>total_us<sp/>=<sp/>((uint64_t)<ref refid="group__BOARD__COMMON_ga1aeaa7e8387adcad735b59293caa0078_1ga1aeaa7e8387adcad735b59293caa0078" kindref="member">OSP_GET_CUR_MS</ref>())<sp/>*<sp/>1000<sp/>+<sp/>(uint64_t)sub_us;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_us;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">uint32_t<sp/><ref refid="group__BOARD__COMMON_ga0a2cbc20d3612af27543fde270ad862c_1ga0a2cbc20d3612af27543fde270ad862c" kindref="member">board_get_cur_ms</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="board_8c_ae5af267603808c2a81386dafb4041ae1_1ae5af267603808c2a81386dafb4041ae1" kindref="member">gl_ms_cnt</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">uint64_t<sp/><ref refid="group__BOARD__COMMON_gad78111cf910063b70a901aa3fbcf7c86_1gad78111cf910063b70a901aa3fbcf7c86" kindref="member">board_get_cur_syshz</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="board_8c_ad7997233196cefb8c3a808a047eabd35_1ad7997233196cefb8c3a808a047eabd35" kindref="member">gl_sys_hz_cnt</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BOARD__COMMON_gadf80b95e6ceb5c1014e3e1a6f243fe8e_1gadf80b95e6ceb5c1014e3e1a6f243fe8e" kindref="member">board_delay_ms</ref>(uint32_t<sp/>ms,<sp/>uint8_t<sp/>os_compat)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>start_us,<sp/>us_delayed;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_OS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(os_compat<sp/>==<sp/><ref refid="group__BOARD__COMMON_ga0925d758144e37de4158bb2faadea9e9_1ga0925d758144e37de4158bb2faadea9e9" kindref="member">OSP_DELAY_OS_COMPAT_ENABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor">#ifdef<sp/>OS_FREERTOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(ms);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>us_delayed<sp/>=<sp/>((uint64_t)ms<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>start_us<sp/>=<sp/><ref refid="group__BOARD__COMMON_gac804f2adaefaef9ae3d123dbe4abb123_1gac804f2adaefaef9ae3d123dbe4abb123" kindref="member">board_get_cur_us</ref>();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group__BOARD__COMMON_gac804f2adaefaef9ae3d123dbe4abb123_1gac804f2adaefaef9ae3d123dbe4abb123" kindref="member">board_get_cur_us</ref>()<sp/>-<sp/>start_us)<sp/>&lt;<sp/>us_delayed)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/embarc_osp/embarc_osp/board/board.c"/>
  </compounddef>
</doxygen>
