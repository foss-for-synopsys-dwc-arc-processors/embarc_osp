<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="emsk_2common_2secure__console_8c" kind="file" language="C++">
    <compoundname>secure_console.c</compoundname>
    <includes refid="embARC_8h" local="yes">embARC.h</includes>
    <includes refid="dw__uart__hal_8h" local="yes">dw_uart_hal.h</includes>
    <includes refid="dw__uart_8h" local="yes">dw_uart.h</includes>
    <incdepgraph>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="15">
        <label>console_io.h</label>
      </node>
      <node id="12">
        <label>arc/arc_timer.h</label>
        <link refid="arc__timer_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="18">
        <label>dw_uart.h</label>
        <link refid="dw__uart_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>arc/arc.h</label>
        <link refid="arc_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>board.h</label>
        <link refid="board_8h"/>
      </node>
      <node id="2">
        <label>embARC.h</label>
        <link refid="embARC_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>arc/arc_builtin.h</label>
        <link refid="arc__builtin_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>embARC_error.h</label>
        <link refid="embARC__error_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>arc/arc_feature_config.h</label>
        <link refid="arc__feature__config_8h"/>
      </node>
      <node id="3">
        <label>embARC_toolchain.h</label>
        <link refid="embARC__toolchain_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>arc/arc_exception.h</label>
        <link refid="arc__exception_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>device/ip_hal/dev_uart.h</label>
        <link refid="dev__uart_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>dw_uart_hal.h</label>
        <link refid="dw__uart__hal_8h"/>
      </node>
      <node id="16">
        <label>xprintf.h</label>
      </node>
      <node id="1">
        <label>/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c</label>
        <link refid="emsk_2common_2secure__console_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>device/dev_common.h</label>
        <link refid="dev__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="emsk_2common_2secure__console_8c_aee6cb6cbccff7ec5bd4567fdc9153762_1aee6cb6cbccff7ec5bd4567fdc9153762" prot="public" static="no">
        <name>DW_UART_BAUD2DIV</name>
        <param><defname>perifreq</defname></param>
        <param><defname>baud</defname></param>
        <initializer>((perifreq) / ((baud)*16))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" line="35" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" prot="public" static="yes" mutable="no">
        <type><ref refid="dw__uart_8h_a19ef2c0bda940457e99df54cc421fdf5_1a19ef2c0bda940457e99df54cc421fdf5" kindref="member">DW_UART_REG_PTR</ref></type>
        <definition>DW_UART_REG_PTR uart_reg_ptr</definition>
        <argsstring></argsstring>
        <name>uart_reg_ptr</name>
        <initializer>= (<ref refid="dw__uart_8h_a19ef2c0bda940457e99df54cc421fdf5_1a19ef2c0bda940457e99df54cc421fdf5" kindref="member">DW_UART_REG_PTR</ref>) (0xF0009000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" line="37" column="25" bodyfile="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="emsk_2common_2secure__console_8c_a552915eb1426b253dd68c2e64525a4e8_1a552915eb1426b253dd68c2e64525a4e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uart_init</definition>
        <argsstring>(void)</argsstring>
        <name>uart_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>setting uart baudrate registers</para>
<para>&lt; DLL</para>
<para>&lt; DLH</para>
<para>disable DLAB</para>
<para>enable uart fifo (FCR IIR is the same)</para>
<para>disable all uart interrupt</para>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" line="39" column="13" bodyfile="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" bodystart="39" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="emsk_2common_2secure__console_8c_ab245a0e10b4aa361c762c866069f9816_1ab245a0e10b4aa361c762c866069f9816" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void secure_console_putchar</definition>
        <argsstring>(char chr)</argsstring>
        <name>secure_console_putchar</name>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" line="71" column="13" bodyfile="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="emsk_2common_2secure__console_8c_a679e3524ae0e6f2d12ec0c8434bc909c_1a679e3524ae0e6f2d12ec0c8434bc909c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int secure_console_getchar</definition>
        <argsstring>(void)</argsstring>
        <name>secure_console_getchar</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" line="78" column="12" bodyfile="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="emsk_2common_2secure__console_8c_ab49cf6d849c0fc67b7aa491c021f12cc_1ab49cf6d849c0fc67b7aa491c021f12cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void secure_console_init</definition>
        <argsstring>(void)</argsstring>
        <name>secure_console_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" line="86" column="6" bodyfile="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c" bodystart="86" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Synopsys,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Synopsys,<sp/>Inc.,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment">---------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embARC_8h" kindref="compound">embARC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dw__uart__hal_8h" kindref="compound">dw_uart_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dw__uart_8h" kindref="compound">dw_uart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DW_UART_BAUD2DIV(perifreq,<sp/>baud)<sp/><sp/><sp/><sp/>((perifreq)<sp/>/<sp/>((baud)*16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8h_a19ef2c0bda940457e99df54cc421fdf5_1a19ef2c0bda940457e99df54cc421fdf5" kindref="member">DW_UART_REG_PTR</ref><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref><sp/>=<sp/>(<ref refid="dw__uart_8h_a19ef2c0bda940457e99df54cc421fdf5_1a19ef2c0bda940457e99df54cc421fdf5" kindref="member">DW_UART_REG_PTR</ref>)<sp/>(0xF0009000U);<sp/></highlight><highlight class="comment">//<sp/>USB-UART<sp/>as<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="emsk_2common_2secure__console_8c_a552915eb1426b253dd68c2e64525a4e8_1a552915eb1426b253dd68c2e64525a4e8" kindref="member">uart_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>baud_divisor;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>baud_divisor<sp/>=<sp/><ref refid="emsk_2common_2secure__console_8c_aee6cb6cbccff7ec5bd4567fdc9153762_1aee6cb6cbccff7ec5bd4567fdc9153762" kindref="member">DW_UART_BAUD2DIV</ref>(<ref refid="axs__hardware_8h_a834959d61bd62205d39308860373b374_1a834959d61bd62205d39308860373b374" kindref="member">CLK_BUS_APB</ref>,<sp/><ref refid="embARC__syscalls_8c_ab6a5428995eb87c161f554c44e6457ab_1ab6a5428995eb87c161f554c44e6457ab" kindref="member">BOARD_CONSOLE_UART_BAUD</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;SRR<sp/>=<sp/><ref refid="dw__uart__hal_8h_a3f41fa65304f0053651d770deeab4037_1a3f41fa65304f0053651d770deeab4037" kindref="member">DW_UART_SRR_UR</ref>|<ref refid="dw__uart__hal_8h_a86b90ea0289e74a1c97e65779a01c383_1a86b90ea0289e74a1c97e65779a01c383" kindref="member">DW_UART_SRR_RFR</ref>|<ref refid="dw__uart__hal_8h_a3485adfce9f7a613e2f8f48483e73f9c_1a3485adfce9f7a613e2f8f48483e73f9c" kindref="member">DW_UART_SRR_XFR</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;USR<sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a6302904f1b9ef8ba7b6e932bcdb22702_1a6302904f1b9ef8ba7b6e932bcdb22702" kindref="member">DW_UART_USR_BUSY</ref>);<sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>until<sp/>software<sp/>reset<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;MCR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>dps<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;LCR<sp/>&amp;=<sp/>(~<ref refid="dw__uart__hal_8h_a7311940460e2935cb7e7fd4e36b090b8_1a7311940460e2935cb7e7fd4e36b090b8" kindref="member">DW_UART_LCR_DPS_MASK</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>dps<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;LCR<sp/>|=<sp/>(<ref refid="dw__uart__hal_8h_ab56fa38d1e9dbd810ee23433722cfe02_1ab56fa38d1e9dbd810ee23433722cfe02" kindref="member">DW_UART_LCR_PARITY_NONE</ref><sp/>|<sp/><sp/><ref refid="dw__uart__hal_8h_ac8af6809d02f69c738786e2056dfd96a_1ac8af6809d02f69c738786e2056dfd96a" kindref="member">DW_UART_LCR_1_STOP_BIT</ref><sp/>|<sp/><ref refid="dw__uart__hal_8h_a5a6cfacdd9cf0f2cfa95496d7dbcf25d_1a5a6cfacdd9cf0f2cfa95496d7dbcf25d" kindref="member">DW_UART_LCR_WORD_LEN8</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>uart<sp/>baudrate<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;LCR<sp/>|=<sp/><ref refid="dw__uart__hal_8h_a81ead9f9c4237d4827e5b9d809482cc2_1a81ead9f9c4237d4827e5b9d809482cc2" kindref="member">DW_UART_LCR_DLAB</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;DATA<sp/>=<sp/>baud_divisor<sp/>&amp;<sp/>0xff;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;IER<sp/>=<sp/>(baud_divisor&gt;&gt;8)<sp/>&amp;<sp/>0xff;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;LCR<sp/>&amp;=<sp/>~(<ref refid="dw__uart__hal_8h_a81ead9f9c4237d4827e5b9d809482cc2_1a81ead9f9c4237d4827e5b9d809482cc2" kindref="member">DW_UART_LCR_DLAB</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;IIR<sp/>=<sp/>0x1;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;IER<sp/>=<sp/>0x0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="emsk_2common_2secure__console_8c_ab245a0e10b4aa361c762c866069f9816_1ab245a0e10b4aa361c762c866069f9816" kindref="member">secure_console_putchar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(<ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;USR<sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_ac50fed048ad56c1e336b70c78ac87fb6_1ac50fed048ad56c1e336b70c78ac87fb6" kindref="member">DW_UART_USR_TFNF</ref>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;DATA<sp/>=<sp/>chr;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="emsk_2common_2secure__console_8c_a679e3524ae0e6f2d12ec0c8434bc909c_1a679e3524ae0e6f2d12ec0c8434bc909c" kindref="member">secure_console_getchar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(<ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;USR<sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a6d4eeb37fd4aec3a9f16ff1081e9ce73_1a6d4eeb37fd4aec3a9f16ff1081e9ce73" kindref="member">DW_UART_USR_RFNE</ref>));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="emsk_2common_2secure__console_8c_ac0b3dba463ee4ed66d777ac5c415eb66_1ac0b3dba463ee4ed66d777ac5c415eb66" kindref="member">uart_reg_ptr</ref>-&gt;DATA;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="emsdp_2common_2secure__console_8c_ab49cf6d849c0fc67b7aa491c021f12cc_1ab49cf6d849c0fc67b7aa491c021f12cc" kindref="member">secure_console_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emsk_2common_2secure__console_8c_a552915eb1426b253dd68c2e64525a4e8_1a552915eb1426b253dd68c2e64525a4e8" kindref="member">uart_init</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>xdev_in(<ref refid="emsk_2common_2secure__console_8c_a679e3524ae0e6f2d12ec0c8434bc909c_1a679e3524ae0e6f2d12ec0c8434bc909c" kindref="member">secure_console_getchar</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>xdev_out(<ref refid="emsk_2common_2secure__console_8c_ab245a0e10b4aa361c762c866069f9816_1ab245a0e10b4aa361c762c866069f9816" kindref="member">secure_console_putchar</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>xprintf(</highlight><highlight class="stringliteral">&quot;Secureshield<sp/>runtime<sp/>starts<sp/>to<sp/>run\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/embarc_osp/embarc_osp/library/secureshield/board/emsk/common/secure_console.c"/>
  </compounddef>
</doxygen>
