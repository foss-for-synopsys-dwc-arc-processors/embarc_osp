<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__DEVICE__HAL__GPIO__CTRLCMD" kind="group">
    <compoundname>DEVICE_HAL_GPIO_CTRLCMD</compoundname>
    <title>GPIO Device Control Commands</title>
    <innergroup refid="group__DEVICE__HAL__GPIO__INT__CFG__SET">GPIO Device Int Configuration Settings</innergroup>
    <innergroup refid="group__DEVICE__HAL__GPIO__DEVSTRUCT">GPIO Device Interface Definition</innergroup>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gadf2e3c74bf24056161b11fe605ae2465" prot="public" static="no">
        <name>GPIO_CMD_SET_BIT_DIR_INPUT</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the <ref refid="structdev__gpio__info_1ad127dface06d3090d4041e97d45e9104" kindref="member">direction</ref> of masked bits of gpio port into <ref refid="group__DEVICE__HAL__GPIO__DEFDIR_ga4956087e24b3fc0ccf1f667b74cb967f_1ga4956087e24b3fc0ccf1f667b74cb967f" kindref="member">input</ref><itemizedlist>
<listitem><para>Param type : uint32_t</para>
</listitem><listitem><para>Param usage : 1 in each bit will be masked.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="178" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga012ec483702c3346090ed3990fb5c424" prot="public" static="no">
        <name>GPIO_CMD_SET_BIT_DIR_OUTPUT</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the <ref refid="structdev__gpio__info_1ad127dface06d3090d4041e97d45e9104" kindref="member">direction</ref> of masked bits of gpio port into <ref refid="group__DEVICE__HAL__GPIO__DEFDIR_gae9bb804807d0819629660c6e97934e37_1gae9bb804807d0819629660c6e97934e37" kindref="member">output</ref><itemizedlist>
<listitem><para>Param type : uint32_t</para>
</listitem><listitem><para>Param usage : 1 in each bit will be masked.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="185" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gaad16affb5d8e7ec732e904be45328c96" prot="public" static="no">
        <name>GPIO_CMD_GET_BIT_DIR</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get <ref refid="structdev__gpio__info_1ad127dface06d3090d4041e97d45e9104" kindref="member">gpio port direction</ref>.<itemizedlist>
<listitem><para>Param type : uint32_t</para>
</listitem><listitem><para>Param usage : 1 bit for 1 bit of gpio port, 0 for input, 1 for output</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="192" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gada822221fb039eb5549af98e8c88ce9b" prot="public" static="no">
        <name>GPIO_CMD_SET_BIT_INT_CFG</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set gpio interrupt configuration for each bit.<itemizedlist>
<listitem><para>Param type : <ref refid="group__DEVICE__HAL__GPIO__INT__CFG__SET_ga8db7727a29bb6f24fe2e23f9782825a8_1ga8db7727a29bb6f24fe2e23f9782825a8" kindref="member">DEV_GPIO_INT_CFG</ref> *</para>
</listitem><listitem><para>Param usage : store gpio interrupt configuration for each bit.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="199" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga75fc7807746e1c9a4fecbb2ac17a23a6" prot="public" static="no">
        <name>GPIO_CMD_GET_BIT_INT_CFG</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get gpio interrupt configuration for each bit.<itemizedlist>
<listitem><para>Param type : <ref refid="group__DEVICE__HAL__GPIO__INT__CFG__SET_ga8db7727a29bb6f24fe2e23f9782825a8_1ga8db7727a29bb6f24fe2e23f9782825a8" kindref="member">DEV_GPIO_INT_CFG</ref> *</para>
</listitem><listitem><para>Param usage : First set int_bit_mask in DEV_GPIO_INT_CFG structure to the mask of which bit of GPIO you want to get. And the interrupt configuration will be stored in the structure DEV_GPIO_INT_CFG, each bit stand for each bit of port.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="208" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gad43d27e0971a8cbca838dc69af2639a7" prot="public" static="no">
        <name>GPIO_CMD_SET_BIT_ISR</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set gpio service routine for each bit.<itemizedlist>
<listitem><para>Param type : <ref refid="group__DEVICE__HAL__GPIO__INT__CFG__SET_ga2fa50bc6d718a630605356e196e244e0_1ga2fa50bc6d718a630605356e196e244e0" kindref="member">DEV_GPIO_BIT_ISR</ref> *</para>
</listitem><listitem><para>Param usage : store gpio handler information for each bit, int handler&apos;s param will be DEV_GPIO *.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="215" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga35168af88b6a2ddef118c55687d23bfa" prot="public" static="no">
        <name>GPIO_CMD_GET_BIT_ISR</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get gpio service routine for each bit.<itemizedlist>
<listitem><para>Param type : <ref refid="group__DEVICE__HAL__GPIO__INT__CFG__SET_ga2fa50bc6d718a630605356e196e244e0_1ga2fa50bc6d718a630605356e196e244e0" kindref="member">DEV_GPIO_BIT_ISR</ref> *</para>
</listitem><listitem><para>Param usage : By passing int_bit_ofs in DEV_GPIO_BIT_ISR, it will return interrupt handler for this bit and store it in int_bit_handler.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="223" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga0dc3ba08f56ab2c5ca64e4beab70fed5" prot="public" static="no">
        <name>GPIO_CMD_ENA_BIT_INT</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable gpio interrupt of the masked bits.<itemizedlist>
<listitem><para>Param type : uint32_t</para>
</listitem><listitem><para>Param usage : 1 in each bit will be masked.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="230" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga628f933ae67d4f0acdedffd3b8b3ae99" prot="public" static="no">
        <name>GPIO_CMD_DIS_BIT_INT</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable gpio interrupt of the masked bits.<itemizedlist>
<listitem><para>Param type : uint32_t</para>
</listitem><listitem><para>Param usage : 1 in each bit will be masked.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="237" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga5c4b788e2447b60ec5e67dea7fc96104" prot="public" static="no">
        <name>GPIO_CMD_GET_BIT_MTHD</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get <ref refid="structdev__gpio__info_1a5f1fdd29f4effd6df56db55ccc011a27" kindref="member">gpio interrupt enable status</ref>.<itemizedlist>
<listitem><para>Param type : uint32_t *</para>
</listitem><listitem><para>Param usage : 1 bit for 1 bit of gpio port, 0 for poll, 1 for interrupt</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="244" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga1bdac03e82e12781a8196fd300753a4d" prot="public" static="no">
        <name>GPIO_CMD_TOGGLE_BITS</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Toggle GPIO output of the masked bits(pins).<itemizedlist>
<listitem><para>Param type : uint32_t</para>
</listitem><listitem><para>Param usage : 1 in each bit will be masked.</para>
</listitem><listitem><para>Return value explanation : </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="251" column="9" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga5127296ba57626bc984aa48d6ee5f010" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_open)(uint32_t dir)</definition>
        <argsstring>)(uint32_t dir)</argsstring>
        <name>gpio_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open gpio device with pre-defined gpio direction</para>
<para>Open a gpio device with pre-defined io direction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dir</parametername>
</parameternamelist>
<parameterdescription>
<para>gpio direction for each bit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>If device was opened before with different parameters, then just increase the <ref refid="structdev__gpio__info_1a44feae265065db66d495eeeff034cc26" kindref="member">opn_cnt</ref> and return <ref refid="group__EMBARC__ERROR_gaa5935765e74b9d1a7e72c9c8f9018b42_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Open settings are not supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="419" column="1" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gacbf9ba33414dd4d1dc01995b7c4fc52e" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_close)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>gpio_close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>close gpio device</para>
<para>Close a gpio device, just decrease the <ref refid="structdev__gpio__info_1a44feae265065db66d495eeeff034cc26" kindref="member">opn_cnt</ref>, if <ref refid="structdev__gpio__info_1a44feae265065db66d495eeeff034cc26" kindref="member">opn_cnt</ref> equals 0, then close the device <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Close successfully without any issues(including scenario that device is already closed) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still opened, the device <ref refid="structdev__gpio__info_1a44feae265065db66d495eeeff034cc26" kindref="member">opn_cnt</ref> decreased by 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="420" column="1" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga659dba8a34f6d83194be83c3bdee0677" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_control)(uint32_t ctrl_cmd, void *param)</definition>
        <argsstring>)(uint32_t ctrl_cmd, void *param)</argsstring>
        <name>gpio_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>control gpio device</para>
<para>Control an gpio device by ctrl_cmd, with passed param. you can control gpio device using predefined gpio control commands defined using <ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref> (which must be implemented by bsp developer), such as <ref refid="group__DEVICE__HAL__GPIO__CTRLCMD_gadf2e3c74bf24056161b11fe605ae2465_1gadf2e3c74bf24056161b11fe605ae2465" kindref="member">change masked gpio direction to input</ref>, and <ref refid="group__DEVICE__HAL__GPIO__CTRLCMD" kindref="compound">more</ref>. And you can also control gpio device using your own specified commands defined using <ref refid="group__DEVICE__HAL__COMMON__DEFCMD_gafe70e244452c1c2f5235b85cadf602bb_1gafe70e244452c1c2f5235b85cadf602bb" kindref="member">DEV_SET_USRCMD</ref>, but these specified commands should be defined in your own gpio device driver implementation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctrl_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DEVICE__HAL__GPIO__CTRLCMD" kindref="compound">control command</ref>, to change or get some thing related to gpio </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">param</parametername>
</parameternamelist>
<parameterdescription>
<para>parameters that maybe argument of the command, or return values of the command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device successfully </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CLSED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not opened </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to hardware issues </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to different reasons like in transfer state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Control command is not supported or not valid, such as interrupt is not supported </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="421" column="1" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga70bd322128648796b6652e4026a2eb91" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_write)(uint32_t val, uint32_t mask)</definition>
        <argsstring>)(uint32_t val, uint32_t mask)</argsstring>
        <name>gpio_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>write gpio device with val, only write the masked bits</para>
<para>Write gpio with val, and only change the masked bits of gpio. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>the data that need to write to gpio </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>gpio bit mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Write gpio with specified value successfully </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="422" column="1" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga0583a36e5d0aab4bd914c34bb44832c9" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_read)(uint32_t *val, uint32_t mask)</definition>
        <argsstring>)(uint32_t *val, uint32_t mask)</argsstring>
        <name>gpio_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read gpio device val, only read the masked bits</para>
<para>Read the masked gpio value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">val</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data need to read from gpio </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>gpio bit mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Read gpio data successfully </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" line="423" column="1" bodyfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definitions for gpio control command, used in <ref refid="group__DEVICE__HAL__GPIO__CTRLCMD_ga659dba8a34f6d83194be83c3bdee0677_1ga659dba8a34f6d83194be83c3bdee0677" kindref="member">GPIO IO Control</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>These commands defined here can be used in user code directly.<itemizedlist>
<listitem><para>Parameters Usage<itemizedlist>
<listitem><para>For passing parameters like integer, just use uint32_t/int32_t to directly pass values</para>
</listitem><listitem><para>For passing parameters for a structure, please use pointer to pass values</para>
</listitem><listitem><para>For getting some data, please use pointer to store the return data</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Common Return Values<itemizedlist>
<listitem><para><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>, Control device successfully</para>
</listitem><listitem><para><ref refid="group__EMBARC__ERROR_gac4e674c971a46afe82377d02a2d19451_1gac4e674c971a46afe82377d02a2d19451" kindref="member">E_CLSED</ref>, Device is not opened</para>
</listitem><listitem><para><ref refid="group__EMBARC__ERROR_ga33dcdca4c2e85d1b2899272d9d176553_1ga33dcdca4c2e85d1b2899272d9d176553" kindref="member">E_OBJ</ref>, Device object is not valid or not exists</para>
</listitem><listitem><para><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>, Parameter is not valid for current control command</para>
</listitem><listitem><para><ref refid="group__EMBARC__ERROR_gae5989e632e687010b35b613304089823_1gae5989e632e687010b35b613304089823" kindref="member">E_SYS</ref>, Control device failed, due to hardware issues such as device is disabled</para>
</listitem><listitem><para><ref refid="group__EMBARC__ERROR_gac05cde47c29052935fd39d6d8a6c5ff4_1gac05cde47c29052935fd39d6d8a6c5ff4" kindref="member">E_NOSPT</ref>, Control command is not supported or not valid </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
