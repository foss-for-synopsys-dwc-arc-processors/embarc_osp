<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="group__DEVICE__HAL__GPIO__CTRLCMD" kind="group">
    <compoundname>DEVICE_HAL_GPIO_CTRLCMD</compoundname>
    <title>GPIO Device Control Commands</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gadf2e3c74bf24056161b11fe605ae2465" prot="public" static="no">
        <name>GPIO_CMD_SET_BIT_DIR_INPUT</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the <ref refid="structdev__gpio__info_ad127dface06d3090d4041e97d45e9104_1ad127dface06d3090d4041e97d45e9104" kindref="member">direction</ref> of masked bits of gpio port into <ref refid="group__DEVICE__HAL__GPIO__DEFDIR_ga4956087e24b3fc0ccf1f667b74cb967f_1ga4956087e24b3fc0ccf1f667b74cb967f" kindref="member">input</ref><itemizedlist>
<listitem><para>Param type : uint32_t</para></listitem><listitem><para>Param usage : 1 in each bit will be masked.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="178" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga012ec483702c3346090ed3990fb5c424" prot="public" static="no">
        <name>GPIO_CMD_SET_BIT_DIR_OUTPUT</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the <ref refid="structdev__gpio__info_ad127dface06d3090d4041e97d45e9104_1ad127dface06d3090d4041e97d45e9104" kindref="member">direction</ref> of masked bits of gpio port into <ref refid="group__DEVICE__HAL__GPIO__DEFDIR_gae9bb804807d0819629660c6e97934e37_1gae9bb804807d0819629660c6e97934e37" kindref="member">output</ref><itemizedlist>
<listitem><para>Param type : uint32_t</para></listitem><listitem><para>Param usage : 1 in each bit will be masked.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="185" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gaad16affb5d8e7ec732e904be45328c96" prot="public" static="no">
        <name>GPIO_CMD_GET_BIT_DIR</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get <ref refid="structdev__gpio__info_ad127dface06d3090d4041e97d45e9104_1ad127dface06d3090d4041e97d45e9104" kindref="member">gpio port direction</ref>.<itemizedlist>
<listitem><para>Param type : uint32_t</para></listitem><listitem><para>Param usage : 1 bit for 1 bit of gpio port, 0 for input, 1 for output</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="192" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gada822221fb039eb5549af98e8c88ce9b" prot="public" static="no">
        <name>GPIO_CMD_SET_BIT_INT_CFG</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set gpio interrupt configuration for each bit.<itemizedlist>
<listitem><para>Param type : <ref refid="group__DEVICE__HAL__GPIO__INT__CFG__SET_ga3cd4a71b300b56dcf96373a00fd03e02_1ga3cd4a71b300b56dcf96373a00fd03e02" kindref="member">DEV_GPIO_INT_CFG</ref> *</para></listitem><listitem><para>Param usage : store gpio interrupt configuration for each bit.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="199" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga75fc7807746e1c9a4fecbb2ac17a23a6" prot="public" static="no">
        <name>GPIO_CMD_GET_BIT_INT_CFG</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get gpio interrupt configuration for each bit.<itemizedlist>
<listitem><para>Param type : <ref refid="group__DEVICE__HAL__GPIO__INT__CFG__SET_ga3cd4a71b300b56dcf96373a00fd03e02_1ga3cd4a71b300b56dcf96373a00fd03e02" kindref="member">DEV_GPIO_INT_CFG</ref> *</para></listitem><listitem><para>Param usage : First set int_bit_mask in DEV_GPIO_INT_CFG structure to the mask of which bit of GPIO you want to get. And the interrupt configuration will be stored in the structure DEV_GPIO_INT_CFG, each bit stand for each bit of port.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="208" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1gad43d27e0971a8cbca838dc69af2639a7" prot="public" static="no">
        <name>GPIO_CMD_SET_BIT_ISR</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set gpio service routine for each bit.<itemizedlist>
<listitem><para>Param type : <ref refid="group__DEVICE__HAL__GPIO__INT__CFG__SET_ga620e465b53c10b6718d12fdc29e963b8_1ga620e465b53c10b6718d12fdc29e963b8" kindref="member">DEV_GPIO_BIT_ISR</ref> *</para></listitem><listitem><para>Param usage : store gpio handler information for each bit, int handler&apos;s param will be DEV_GPIO *.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="215" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga35168af88b6a2ddef118c55687d23bfa" prot="public" static="no">
        <name>GPIO_CMD_GET_BIT_ISR</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get gpio service routine for each bit.<itemizedlist>
<listitem><para>Param type : <ref refid="group__DEVICE__HAL__GPIO__INT__CFG__SET_ga620e465b53c10b6718d12fdc29e963b8_1ga620e465b53c10b6718d12fdc29e963b8" kindref="member">DEV_GPIO_BIT_ISR</ref> *</para></listitem><listitem><para>Param usage : By passing int_bit_ofs in DEV_GPIO_BIT_ISR, it will return interrupt handler for this bit and store it in int_bit_handler.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="223" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga0dc3ba08f56ab2c5ca64e4beab70fed5" prot="public" static="no">
        <name>GPIO_CMD_ENA_BIT_INT</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable gpio interrupt of the masked bits.<itemizedlist>
<listitem><para>Param type : uint32_t</para></listitem><listitem><para>Param usage : 1 in each bit will be masked.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="230" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga628f933ae67d4f0acdedffd3b8b3ae99" prot="public" static="no">
        <name>GPIO_CMD_DIS_BIT_INT</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable gpio interrupt of the masked bits.<itemizedlist>
<listitem><para>Param type : uint32_t</para></listitem><listitem><para>Param usage : 1 in each bit will be masked.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="237" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga5c4b788e2447b60ec5e67dea7fc96104" prot="public" static="no">
        <name>GPIO_CMD_GET_BIT_MTHD</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get <ref refid="structdev__gpio__info_a5f1fdd29f4effd6df56db55ccc011a27_1a5f1fdd29f4effd6df56db55ccc011a27" kindref="member">gpio interrupt enable status</ref>.<itemizedlist>
<listitem><para>Param type : uint32_t *</para></listitem><listitem><para>Param usage : 1 bit for 1 bit of gpio port, 0 for poll, 1 for interrupt</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="244" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__GPIO__CTRLCMD_1ga1bdac03e82e12781a8196fd300753a4d" prot="public" static="no">
        <name>GPIO_CMD_TOGGLE_BITS</name>
        <initializer><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Toggle GPIO output of the masked bits(pins).<itemizedlist>
<listitem><para>Param type : uint32_t</para></listitem><listitem><para>Param usage : 1 in each bit will be masked.</para></listitem><listitem><para>Return value explanation : </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" line="251" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_gpio.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definitions for gpio control command, used in <ref refid="group__DEVICE__HAL__GPIO_ga659dba8a34f6d83194be83c3bdee0677_1ga659dba8a34f6d83194be83c3bdee0677" kindref="member">GPIO IO Control</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>These commands defined here can be used in user code directly.<itemizedlist>
<listitem><para>Parameters Usage<itemizedlist>
<listitem><para>For passing parameters like integer, just use uint32_t/int32_t to directly pass values</para></listitem><listitem><para>For passing parameters for a structure, please use pointer to pass values</para></listitem><listitem><para>For getting some data, please use pointer to store the return data</para></listitem></itemizedlist>
</para></listitem><listitem><para>Common Return Values<itemizedlist>
<listitem><para><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>, Control device successfully</para></listitem><listitem><para><ref refid="group__EMBARC__ERROR_gac4e674c971a46afe82377d02a2d19451_1gac4e674c971a46afe82377d02a2d19451" kindref="member">E_CLSED</ref>, Device is not opened</para></listitem><listitem><para><ref refid="group__EMBARC__ERROR_ga33dcdca4c2e85d1b2899272d9d176553_1ga33dcdca4c2e85d1b2899272d9d176553" kindref="member">E_OBJ</ref>, Device object is not valid or not exists</para></listitem><listitem><para><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>, Parameter is not valid for current control command</para></listitem><listitem><para><ref refid="group__EMBARC__ERROR_gae5989e632e687010b35b613304089823_1gae5989e632e687010b35b613304089823" kindref="member">E_SYS</ref>, Control device failed, due to hardware issues such as device is disabled</para></listitem><listitem><para><ref refid="group__EMBARC__ERROR_gac05cde47c29052935fd39d6d8a6c5ff4_1gac05cde47c29052935fd39d6d8a6c5ff4" kindref="member">E_NOSPT</ref>, Control command is not supported or not valid </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
