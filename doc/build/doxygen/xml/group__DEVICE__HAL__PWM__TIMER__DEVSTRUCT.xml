<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT" kind="group">
    <compoundname>DEVICE_HAL_PWM_TIMER_DEVSTRUCT</compoundname>
    <title>PWM_TIMER Device Interface Definition</title>
    <innerclass refid="structdev__pwm__timer__info" prot="public">dev_pwm_timer_info</innerclass>
    <innerclass refid="structdev__pwm__timer" prot="public">dev_pwm_timer</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1gaabe67107db642e3d3038647a0d14cc89" prot="public" static="no">
        <type>struct <ref refid="structdev__pwm__timer__info" kindref="compound">dev_pwm_timer_info</ref></type>
        <definition>typedef struct dev_pwm_timer_info  DEV_PWM_TIMER_INFO</definition>
        <argsstring></argsstring>
        <name>DEV_PWM_TIMER_INFO</name>
        <briefdescription>
<para>PWM_TIMER information struct definition. </para>        </briefdescription>
        <detaileddescription>
<para>informations about pwm_timer open count, working status, pwm_timer registers and ctrl structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1ga9d1420cb49f182ed7ee66108b4064bff" prot="public" static="no">
        <type>struct <ref refid="structdev__pwm__timer__info" kindref="compound">dev_pwm_timer_info</ref> *</type>
        <definition>typedef struct dev_pwm_timer_info * DEV_PWM_TIMER_INFO_PTR</definition>
        <argsstring></argsstring>
        <name>DEV_PWM_TIMER_INFO_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1gad0702db577c4ff3e528c53a9b9175e92" prot="public" static="no">
        <type>struct <ref refid="structdev__pwm__timer" kindref="compound">dev_pwm_timer</ref></type>
        <definition>typedef struct dev_pwm_timer  DEV_PWM_TIMER</definition>
        <argsstring></argsstring>
        <name>DEV_PWM_TIMER</name>
        <briefdescription>
<para>PWM_TIMER device interface definition. </para>        </briefdescription>
        <detaileddescription>
<para>Define pwm_timer device interface, like pwm_timer information structure, provide functions to open/close/control pwm_timer, send/receive data by pwm_timer <simplesect kind="note"><para>All this details are implemented by user in user porting code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1ga163f6d4cd8f1e6e67b652c6618c6c27f" prot="public" static="no">
        <type>struct <ref refid="structdev__pwm__timer" kindref="compound">dev_pwm_timer</ref> *</type>
        <definition>typedef struct dev_pwm_timer * DEV_PWM_TIMER_PTR</definition>
        <argsstring></argsstring>
        <name>DEV_PWM_TIMER_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="166" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1ga4e262cd5ec22e28b615fb21aae4776ce" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_pwm_timer::pwm_timer_open)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>pwm_timer_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open pwm_timer device</para><para>open pwm_timer device <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>If device was opened before with different parameters, then just increase the <ref refid="structdev__pwm__timer__info_ae51c36b39f401534fae00f2e28ff436d_1ae51c36b39f401534fae00f2e28ff436d" kindref="member">opn_cnt</ref> and return <ref refid="group__EMBARC__ERROR_gaa5935765e74b9d1a7e72c9c8f9018b42_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Open settings are not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="161" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1ga06ca58b15c125ab85a5467a16b946158" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_pwm_timer::pwm_timer_close)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>pwm_timer_close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close pwm_timer device</para><para>close an pwm_timer device, just decrease the <ref refid="structdev__pwm__timer__info_ae51c36b39f401534fae00f2e28ff436d_1ae51c36b39f401534fae00f2e28ff436d" kindref="member">opn_cnt</ref>, if <ref refid="structdev__pwm__timer__info_ae51c36b39f401534fae00f2e28ff436d_1ae51c36b39f401534fae00f2e28ff436d" kindref="member">opn_cnt</ref> equals 0, then close the device <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Close successfully without any issues(including scenario that device is already closed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still opened, the device <ref refid="structdev__pwm__timer__info_ae51c36b39f401534fae00f2e28ff436d_1ae51c36b39f401534fae00f2e28ff436d" kindref="member">opn_cnt</ref> decreased by 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="162" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1ga4774713e05dfa69c9105e506c89ebbff" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_pwm_timer::pwm_timer_control)(uint32_t ch, uint32_t cmd, void *param2)</definition>
        <argsstring>)(uint32_t ch, uint32_t cmd, void *param2)</argsstring>
        <name>pwm_timer_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Control pwm_timer device</para><para>control an pwm_timer device [channel number: ch] by ctrl_cmd, with passed param. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel number of pwm_timer to control, must &gt;= 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>control command, to change or get some thing related to pwm_timer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">param</parametername>
</parameternamelist>
<parameterdescription>
<para>parameters that maybe argument of the command, or return values of the command </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CLSED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to different reasons like in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Control command is not supported or not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="163" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1gaca656043f520755819f02909a38f50e5" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_pwm_timer::pwm_timer_write)(uint32_t ch, uint32_t mode, uint32_t freq, uint32_t dc)</definition>
        <argsstring>)(uint32_t ch, uint32_t mode, uint32_t freq, uint32_t dc)</argsstring>
        <name>pwm_timer_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the configuration of pwm_timer</para><para>set the configuration of pwm_timer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel number of pwm_timer to write, must &gt;= 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>set the mode of pwm_timer, must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">freq</parametername>
</parameternamelist>
<parameterdescription>
<para>set the frequency of pwm_timer, must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dc</parametername>
</parameternamelist>
<parameterdescription>
<para>set the duty cycle of pwm_timer, must not be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>set device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t receive data from hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="164" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__PWM__TIMER__DEVSTRUCT_1gaac1fd059387788ba98b9969860d35cb6" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_pwm_timer::pwm_timer_read)(uint32_t ch, uint32_t *mode, uint32_t *freq, uint32_t *dc)</definition>
        <argsstring>)(uint32_t ch, uint32_t *mode, uint32_t *freq, uint32_t *dc)</argsstring>
        <name>pwm_timer_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the configuration of pwm_timer</para><para>read the configuration of pwm_timer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel number of pwm_timer to read, must &gt;= 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data mode of pwm_timer, must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">freq</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data frequency of pwm_timer, must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data duty cycle of pwm_timer, must not be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Read device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t receive data from hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" line="165" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_pwm_timer.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains definitions of pwm_timer device interface structure. </para>    </briefdescription>
    <detaileddescription>
<para>This structure will be used in user implemented code, which was called <ref refid="group__DEVICE__IMPL" kindref="compound">Device Driver Implement Layer</ref> for pwm_timer to use in implementation code. Application developer should use the PWM_TIMER API provided here to access to PWM_TIMER devices. BSP developer should follow the API definition to implement PWM_TIMER device drivers. </para>    </detaileddescription>
  </compounddef>
</doxygen>
