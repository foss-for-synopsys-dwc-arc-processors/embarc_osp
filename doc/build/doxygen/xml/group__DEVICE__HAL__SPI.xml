<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__DEVICE__HAL__SPI" kind="group">
    <compoundname>DEVICE_HAL_SPI</compoundname>
    <title>SPI Device HAL Interface</title>
    <innerfile refid="dev__spi_8h">dev_spi.h</innerfile>
    <innergroup refid="group__DEVICE__HAL__SPI__CLK__MODE">SPI Clock Mode</innergroup>
    <innergroup refid="group__DEVICE__HAL__SPI__CTRLCMD">SPI Device Control Commands</innergroup>
    <innergroup refid="group__DEVICE__HAL__SPI__DEVSTRUCT">SPI Device Structure</innergroup>
    <innergroup refid="group__DEVICE__HAL__SPI__CALLBACK">SPI Interrupt callback functions</innergroup>
    <innergroup refid="group__DEVICE__HAL__SPI__SLAVE__SELECT">SPI Slave Select Line</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DEVICE__HAL__SPI_1ga5e304233b6cea5fb2403f13d0b4bcb27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DEVICE__HAL__SPI__DEVSTRUCT_ga031f3dc885c36f74be5d80c22d849009_1ga031f3dc885c36f74be5d80c22d849009" kindref="member">DEV_SPI_PTR</ref></type>
        <definition>DEV_SPI_PTR spi_get_dev</definition>
        <argsstring>(int32_t spi_id)</argsstring>
        <name>spi_get_dev</name>
        <param>
          <type>int32_t</type>
          <declname>spi_id</declname>
        </param>
        <briefdescription>
<para>get an <ref refid="structdev__spi" kindref="compound">spi device</ref> by spi device id. For how to use spi device hal refer to <ref refid="structdev__spi" kindref="compound">Functions in spi device structure</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">spi_id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of spi, defined by user </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="structdev__spi" kindref="compound">spi device structure</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>failed to find the spi device by spi_id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>need to implemented by user in user code</para>
</simplesect>
get one designware device structure </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; SPI 0 id macro (master node)</para>
<para>&lt; SPI 1 id macro (slave node)</para>
<para>&lt; SPI 0 id macro</para>
<para>&lt; SPI 1 id macro</para>
<para>&lt; SPI 2 id macro</para>
        </inbodydescription>
        <location file="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_spi.h" line="638" column="20" bodyfile="/home/runner/work/embarc_osp/embarc_osp/board/emsdp/drivers/ip/ip_obj_mgr.c" bodystart="32" bodyend="68" declfile="/home/runner/work/embarc_osp/embarc_osp/include/device/ip_hal/dev_spi.h" declline="638" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>definitions for spi device hardware layer (<ref refid="dev__spi_8h" kindref="compound">dev_spi.h</ref>) </para>
    </briefdescription>
    <detaileddescription>
<para>provide interfaces for spi driver to implement Here is a diagram for the spi interface.</para>
<para> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
