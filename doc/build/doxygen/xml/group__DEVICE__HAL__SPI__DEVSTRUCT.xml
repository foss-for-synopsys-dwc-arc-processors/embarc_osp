<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="group__DEVICE__HAL__SPI__DEVSTRUCT" kind="group">
    <compoundname>DEVICE_HAL_SPI_DEVSTRUCT</compoundname>
    <title>SPI Device Structure</title>
    <innerclass refid="structdev__spi__transfer" prot="public">dev_spi_transfer</innerclass>
    <innerclass refid="structDEV__SPI__PAK" prot="public">DEV_SPI_PAK</innerclass>
    <innerclass refid="structdev__spi__info" prot="public">dev_spi_info</innerclass>
    <innerclass refid="structdev__spi" prot="public">dev_spi</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga296ca50563d3df910743a6c1001946c6" prot="public" static="no">
        <type>struct <ref refid="structdev__spi__transfer" kindref="compound">dev_spi_transfer</ref></type>
        <definition>typedef struct dev_spi_transfer DEV_SPI_TRANSFER</definition>
        <argsstring></argsstring>
        <name>DEV_SPI_TRANSFER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="374" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1gaf45a8c9a363591c178f7f75c7294b58a" prot="public" static="no">
        <type>struct <ref refid="structdev__spi__transfer" kindref="compound">dev_spi_transfer</ref> *</type>
        <definition>typedef struct dev_spi_transfer * DEV_SPI_TRANSFER_PTR</definition>
        <argsstring></argsstring>
        <name>DEV_SPI_TRANSFER_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="432" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga9c2b7129610aeae9da3fd46ab8dc9f36" prot="public" static="no">
        <type>struct <ref refid="structDEV__SPI__PAK" kindref="compound">DEV_SPI_PAK</ref> *</type>
        <definition>typedef  struct DEV_SPI_PAK * DEV_SPI_PAK_PTR</definition>
        <argsstring></argsstring>
        <name>DEV_SPI_PAK_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="506" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga8125d4a1fd02b56a694d3520ed38b734" prot="public" static="no">
        <type>struct <ref refid="structdev__spi__info" kindref="compound">dev_spi_info</ref></type>
        <definition>typedef struct dev_spi_info  DEV_SPI_INFO</definition>
        <argsstring></argsstring>
        <name>DEV_SPI_INFO</name>
        <briefdescription>
<para>spi information struct definition </para>        </briefdescription>
        <detaileddescription>
<para>informations about spi open state, working state, frequency, spi registers, working method, interrupt number </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga35093aafa08a894ae5d4b8190b22f522" prot="public" static="no">
        <type>struct <ref refid="structdev__spi__info" kindref="compound">dev_spi_info</ref> *</type>
        <definition>typedef struct dev_spi_info * DEV_SPI_INFO_PTR</definition>
        <argsstring></argsstring>
        <name>DEV_SPI_INFO_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1gadd86dcfed5b39e0bf5b74c47b4b2971a" prot="public" static="no">
        <type>struct <ref refid="structdev__spi" kindref="compound">dev_spi</ref></type>
        <definition>typedef struct dev_spi  DEV_SPI</definition>
        <argsstring></argsstring>
        <name>DEV_SPI</name>
        <briefdescription>
<para>spi device interface definition </para>        </briefdescription>
        <detaileddescription>
<para>define spi device interface, like spi information structure, fuctions to get spi info, open/close/control spi, send/receive data by spi <simplesect kind="note"><para>all this details are implemented by user in user porting code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="555" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga031f3dc885c36f74be5d80c22d849009" prot="public" static="no">
        <type>struct <ref refid="structdev__spi" kindref="compound">dev_spi</ref> *</type>
        <definition>typedef struct dev_spi * DEV_SPI_PTR</definition>
        <argsstring></argsstring>
        <name>DEV_SPI_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="555" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1gafa61a7a7c000462a82f2444ae25af2bb" prot="public" static="no">
        <name>DEV_SPI_XFER_SET_TXBUF</name>
        <param><defname>xfer</defname></param>
        <param><defname>buf</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>{ \
		(xfer)-&gt;tx_buf = (uint8_t *)(buf);		  \
		(xfer)-&gt;tx_len = (uint32_t)(len);		  \
		(xfer)-&gt;tx_ofs = (uint32_t)(ofs);		  \
		(xfer)-&gt;tx_idx = 0;				  \
		(xfer)-&gt;tx_totlen = ((uint32_t)(len)		  \
				     + (uint32_t)(ofs));	  \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set tx buffer of device spi transfer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="458" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga13ef217b2a46833d9d83d41dca34d152" prot="public" static="no">
        <name>DEV_SPI_XFER_SET_RXBUF</name>
        <param><defname>xfer</defname></param>
        <param><defname>buf</defname></param>
        <param><defname>ofs</defname></param>
        <param><defname>len</defname></param>
        <initializer>{ \
		(xfer)-&gt;rx_buf = (uint8_t *)(buf);		  \
		(xfer)-&gt;rx_len = (uint32_t)(len);		  \
		(xfer)-&gt;rx_ofs = (uint32_t)(ofs);		  \
		(xfer)-&gt;rx_idx = 0;				  \
		(xfer)-&gt;rx_totlen = ((uint32_t)(len)		  \
				     + (uint32_t)(ofs));	  \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set rx buffer of device spi transfer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="468" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga4a968d6e09efb89c82c6f0943fce15a1" prot="public" static="no">
        <name>DEV_SPI_XFER_CALC_TOTLEN</name>
        <param><defname>xfer</defname></param>
        <initializer>(xfer)-&gt;tot_len = \
	((xfer)-&gt;tx_totlen &gt; (xfer)-&gt;rx_totlen) ? (xfer)-&gt;tx_totlen : (xfer)-&gt;rx_totlen;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate total length of current transfer without next transfer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="478" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga7f2d84c08d3c7130a82e1414da26ad74" prot="public" static="no">
        <name>DEV_SPI_XFER_SET_NEXT</name>
        <param><defname>xfer</defname></param>
        <param><defname>next_xfer</defname></param>
        <initializer>(xfer)-&gt;next = (next_xfer);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set next SPI transfer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="482" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga22c23668b451fd0554ce588289ed54c3" prot="public" static="no">
        <name>DEV_SPI_XFER_INIT</name>
        <param><defname>xfer</defname></param>
        <initializer>{ \
		(xfer)-&gt;tx_idx = 0;				  \
		(xfer)-&gt;rx_idx = 0;				  \
		(xfer)-&gt;tx_totlen = ((xfer)-&gt;tx_len		  \
				     + (xfer)-&gt;tx_ofs);		  \
		(xfer)-&gt;rx_totlen = ((xfer)-&gt;rx_len		  \
				     + (xfer)-&gt;rx_ofs);		  \
		<ref refid="group__DEVICE__HAL__SPI__DEVSTRUCT_ga4a968d6e09efb89c82c6f0943fce15a1_1ga4a968d6e09efb89c82c6f0943fce15a1" kindref="member">DEV_SPI_XFER_CALC_TOTLEN</ref>(xfer);			  \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init spi transfer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="485" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga354000dde22f74e03fe31398427d3f89" prot="public" static="no">
        <name>DEV_SPI_INFO_SET_EXTRA_OBJECT</name>
        <param><defname>spi_info_ptr</defname></param>
        <param><defname>extra_info</defname></param>
        <initializer>(spi_info_ptr)-&gt;extra = (void *)(extra_info)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set extra information pointer of spi info </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="532" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1gae4b36ea0d96870590ff54beff78dfd37" prot="public" static="no">
        <name>DEV_SPI_INFO_GET_EXTRA_OBJECT</name>
        <param><defname>spi_info_ptr</defname></param>
        <initializer>((spi_info_ptr)-&gt;extra)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get extra information pointer of spi info </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="534" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1gaa32c7741fd1467614b5908e38af740a3" prot="public" static="no">
        <name>SPI_DFS_DEFAULT</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default spi data frame size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="536" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga586076350631be95b49d18994622b0eb" prot="public" static="no">
        <name>SPI_SLAVE_NOT_SELECTED</name>
        <initializer>(0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slave is not selected </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="537" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1gae7d05f1d5a9b9c1342951d816b3f8a2f" prot="public" static="no">
        <name>SPI_DUMMY_DEFAULT</name>
        <initializer>(0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default dummy value for first open </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="538" column="9" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1gab6b6fc8a280ce9652f6245ba803a4f8c" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_spi::spi_open)(uint32_t mode, uint32_t param)</definition>
        <argsstring>)(uint32_t mode, uint32_t param)</argsstring>
        <name>spi_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open spi device in master/slave mode, \ when in master mode, param stands for frequency, \ when in slave mode, param stands for clock mode</para><para>open an spi device with selected mode (master or slave) with defined param <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>working mode (<ref refid="group__DEVICE__HAL__COMMON__DEVMODE_ga9b1ad5abdf677288f655dd4bc9dc188d_1ga9b1ad5abdf677288f655dd4bc9dc188d" kindref="member">master</ref> or <ref refid="group__DEVICE__HAL__COMMON__DEVMODE_gaf070489d9f19e9000cb9700bb859a079_1gaf070489d9f19e9000cb9700bb859a079" kindref="member">slave</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>When mode is <ref refid="group__DEVICE__HAL__COMMON__DEVMODE_ga9b1ad5abdf677288f655dd4bc9dc188d_1ga9b1ad5abdf677288f655dd4bc9dc188d" kindref="member">DEV_MASTER_MODE</ref>, param stands for <ref refid="structdev__spi__info_a5ecb225abfb364893985791e5344e304_1a5ecb225abfb364893985791e5344e304" kindref="member">frequency</ref>, when mode is <ref refid="group__DEVICE__HAL__COMMON__DEVMODE_gaf070489d9f19e9000cb9700bb859a079_1gaf070489d9f19e9000cb9700bb859a079" kindref="member">DEV_SLAVE_MODE</ref>, param stands for <ref refid="structdev__spi__info_a0ab415ab28a9b9c5e008aeadace01350_1a0ab415ab28a9b9c5e008aeadace01350" kindref="member">slave clock mode</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>If device was opened before with different parameters, then just increase the <ref refid="structdev__spi__info_ac9a3109e182e2a5f5a442582706bddfe_1ac9a3109e182e2a5f5a442582706bddfe" kindref="member">opn_cnt</ref> and return <ref refid="group__EMBARC__ERROR_gaa5935765e74b9d1a7e72c9c8f9018b42_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is opened for different mode before, if you want to open it with different mode, you need to fully close it first. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Open settings are not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="548" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga1c550a415224864ca189f3b18a58c5d2" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_spi::spi_close)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>spi_close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>close spi device</para><para>close an spi device, just decrease the <ref refid="structdev__spi__info_ac9a3109e182e2a5f5a442582706bddfe_1ac9a3109e182e2a5f5a442582706bddfe" kindref="member">opn_cnt</ref>, if <ref refid="structdev__spi__info_ac9a3109e182e2a5f5a442582706bddfe_1ac9a3109e182e2a5f5a442582706bddfe" kindref="member">opn_cnt</ref> equals 0, then close the device <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Close successfully without any issues(including scenario that device is already closed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still opened, the device <ref refid="structdev__spi__info_ac9a3109e182e2a5f5a442582706bddfe_1ac9a3109e182e2a5f5a442582706bddfe" kindref="member">opn_cnt</ref> decreased by 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="551" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga9a3ba6c5fbec77ee3555e07fb08667d7" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_spi::spi_control)(uint32_t ctrl_cmd, void *param)</definition>
        <argsstring>)(uint32_t ctrl_cmd, void *param)</argsstring>
        <name>spi_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>control spi device</para><para>control an spi device by ctrl_cmd, with passed param. you can control spi device using predefined spi control commands defined using <ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref> (which must be implemented by bsp developer), such as <ref refid="group__DEVICE__HAL__SPI__CTRLCMD_ga3800261c450f77f92c20cad49d64de72_1ga3800261c450f77f92c20cad49d64de72" kindref="member">set spi master frequency</ref>, <ref refid="group__DEVICE__HAL__SPI__CTRLCMD_ga57cc316e89c27c457006c438764b479e_1ga57cc316e89c27c457006c438764b479e" kindref="member">flush tx</ref> and <ref refid="group__DEVICE__HAL__SPI__CTRLCMD" kindref="compound">more</ref>. And you can also control spi device using your own specified commands defined using <ref refid="group__DEVICE__HAL__COMMON__DEFCMD_gafe70e244452c1c2f5235b85cadf602bb_1gafe70e244452c1c2f5235b85cadf602bb" kindref="member">DEV_SET_USRCMD</ref>, but these specified commands should be defined in your own spi device driver implementation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctrl_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DEVICE__HAL__SPI__CTRLCMD" kindref="compound">control command</ref>, to change or get some thing related to spi </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">param</parametername>
</parameternamelist>
<parameterdescription>
<para>parameters that maybe argument of the command, or return values of the command, must not be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CLSED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to different reasons like in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Control command is not supported or not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="552" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1gab9f3777682db6132b89f59fe6759a6d5" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_spi::spi_write)(const void *data, uint32_t len)</definition>
        <argsstring>)(const void *data, uint32_t len)</argsstring>
        <name>spi_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>send data to spi device (blocking method)</para><para>send data through spi with defined len to slave device . <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data need to send by spi </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data to be sent </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte count that was successfully sent for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t write data to hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="553" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_1ga8fe6f9502c789cb9344686028d9455c0" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_spi::spi_read)(void *data, uint32_t len)</definition>
        <argsstring>)(void *data, uint32_t len)</argsstring>
        <name>spi_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read data from spi device (blocking method)</para><para>receive data of defined len through spi from slave device . <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data need to received by spi </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data to be received </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte count that was successfully received for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t receive data from hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" line="554" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/include/device/ip_hal/dev_spi.h" bodystart="554" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>contains definitions of spi device structure. </para>    </briefdescription>
    <detaileddescription>
<para>this structure will be used in user implemented code, which was called Device Driver Implement Layer for spi to realize in user code. </para>    </detaileddescription>
  </compounddef>
</doxygen>
