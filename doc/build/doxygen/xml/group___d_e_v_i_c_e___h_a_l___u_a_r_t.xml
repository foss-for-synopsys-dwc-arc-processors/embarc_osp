<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="group___d_e_v_i_c_e___h_a_l___u_a_r_t" kind="group">
    <compoundname>DEVICE_HAL_UART</compoundname>
    <title>UART Device HAL Interface</title>
    <innerfile refid="dev__uart_8h">dev_uart.h</innerfile>
    <innergroup refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___b_a_u_d">UART Device Baudrate Definitions</innergroup>
    <innergroup refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d">UART Device Control Commands</innergroup>
    <innergroup refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t">UART Device Format Definitions</innergroup>
    <innergroup refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t">UART Device Interface Definition</innergroup>
    <innergroup refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_a_l_l_b_a_c_k">UART Interrupt callback functions</innergroup>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gaa79a1d08e403b54670b892c0c58d91d5" prot="public" static="no">
        <name>UART_HW_FLOW_CONTROL</name>
        <enumvalue id="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a527864f0ec595151e7db5ef909fcf9f0" prot="public">
          <name>UART_FC_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Non hardware flow control </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5afc75cc759e85ee277ead4520fb1d0b90" prot="public">
          <name>UART_FC_RTS</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Request To Send </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a42eb1be010429695afe750de07e7ade6" prot="public">
          <name>UART_FC_CTS</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear To Send </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" prot="public">
          <name>UART_FC_BOTH</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Both hardware flow control methods </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>UART Device Hardware Flow Control Types Enum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/device/ip/ip_hal/inc/dev_uart.h" line="138" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/device/ip/ip_hal/inc/dev_uart.h" bodystart="138" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ga4f722366b7af5439793dc46b8a209fe8" prot="public" static="yes" mutable="no">
        <type>const <ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref></type>
        <definition>const UART_HW_FLOW_CONTROL hwfc_default</definition>
        <argsstring></argsstring>
        <name>hwfc_default</name>
        <initializer>= <ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a527864f0ec595151e7db5ef909fcf9f0" kindref="member">UART_FC_NONE</ref></initializer>
        <briefdescription>
<para>Default hardware flow control method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/device/ip/ip_hal/inc/dev_uart.h" line="145" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/device/ip/ip_hal/inc/dev_uart.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gade938afe2174b43b8522bf05cdcb1202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdev__uart" kindref="compound">DEV_UART_PTR</ref></type>
        <definition>DEV_UART_PTR uart_get_dev</definition>
        <argsstring>(int32_t uart_id)</argsstring>
        <name>uart_get_dev</name>
        <param>
          <type>int32_t</type>
          <declname>uart_id</declname>
        </param>
        <briefdescription>
<para>get an <ref refid="structdev__uart" kindref="compound">uart device</ref> by uart device id. </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>    For how to use uart device hal refer to \ref DEVICE_HAL_UART_DEVSTRUCT &quot;Functions in uart device structure&quot;
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of uart, defined by user </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an <ref refid="structdev__uart" kindref="compound">uart device structure</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>failed to find the uart device by uart_id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>need to implemented by user in user code</para></simplesect>
get an <ref refid="structdev__uart" kindref="compound">uart device</ref> by uart device id. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/device/ip/ip_hal/inc/dev_uart.h" line="465" column="1" bodyfile="/slowfs/ru20arcjenkins/de02-arcjenkins2/slaves/ru20-gp-hw-linux105/workspace/arcoss_verification/sandbox_jingru/testing_jobs/embarc_osp_verification/embarc_osp_website/embarc_osp/board/axs/drivers/ip/designware/uart/dw_uart_obj.c" bodystart="248" bodyend="278"/>
        <references refid="group___b_o_a_r_d___e_m_s_k___d_r_v___d_w___u_a_r_t___o_b_j_1ga3b6bf4f01e07d6db0be208fb03f16d84" compoundref="emsk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="69">dw_uart_0</references>
        <references refid="group___b_o_a_r_d___e_m_s_k___d_r_v___d_w___u_a_r_t___o_b_j_1ga61cfe53266aacb4cb6a0f8b879507dee" compoundref="emsk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8h" startline="60">DW_UART_0_ID</references>
        <references refid="group___b_o_a_r_d___e_m_s_k___d_r_v___d_w___u_a_r_t___o_b_j_1gaed9bdd3cce9985baa328d3110e07fd71" compoundref="emsk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="145">dw_uart_1</references>
        <references refid="group___b_o_a_r_d___e_m_s_k___d_r_v___d_w___u_a_r_t___o_b_j_1ga5fb2a0672ce7e3c57ea515366808fe56" compoundref="emsk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8h" startline="61">DW_UART_1_ID</references>
        <references refid="group___b_o_a_r_d___e_m_s_k___d_r_v___d_w___u_a_r_t___o_b_j_1gaf791cda00d95454c6e8a0fe977398606" compoundref="emsk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8h" startline="62">DW_UART_2_ID</references>
        <references refid="group___b_o_a_r_d___e_m_s_k___d_r_v___d_w___u_a_r_t___o_b_j_1ga753da64d72c992edb3b90f781ef53828" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="284" endline="295">dw_uart_all_install</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definitions for uart device hardware layer (<ref refid="dev__uart_8h" kindref="compound">dev_uart.h</ref>) </para>    </briefdescription>
    <detaileddescription>
<para>Provide unified APIs for uart driver to implement. Here is a diagram for the uart interface.</para><para><htmlonly> 
 &lt;div class=&quot;imagebox&quot;&gt;
     &lt;div style=&quot;width: 600px&quot;&gt;
         &lt;img src=&quot;pic/dev_uart_hal.jpg&quot; alt=&quot;UART Device HAL Interface Diagram&quot;/&gt;
         &lt;p&gt;UART Device HAL Interface Diagram&lt;/p&gt;
     &lt;/div&gt;
 &lt;/div&gt;
 </htmlonly></para><para><heading level="3">Reference Links</heading>
</para><para><itemizedlist>
<listitem><para><ulink url="https://en.wikipedia.org/wiki/Serial_port">Serial Port</ulink></para></listitem></itemizedlist>
</para><para>6 </para>    </detaileddescription>
  </compounddef>
</doxygen>
